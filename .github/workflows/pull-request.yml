name: Pull request validation workflow

on:
  pull_request:
    types:
      - opened
      - synchronize
      - labeled
    paths-ignore:
      - '**.md'

env:
  GCR_TOKEN: ${{ secrets.GCR_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  STEP_SCRIPTS: ${{ github.workspace }}/.github/steps/pull-request

jobs:
  update-pr-branch-version:
    runs-on: ubuntu-latest
    outputs:
      new-version: ${{ steps.update-version.outputs.new-version }}
    steps:
      - name: Python Poetry Action
        uses: abatilo/actions-poetry@v2.1.4

      - uses: uwit-iam/actions/require-semver-guidance-label@0.1
        id: guidance
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: uwit-iam/actions/update-pr-branch-version@0.1
        with:
          github-token: ${{ env.GITHUB_TOKEN }}
          version-guidance: ${{ steps.guidance.outputs.guidance }}
        id: update-version

  validate-image-quality:
    permissions:
      contents: write
      id-token: write
      pull-requests: write

    needs: [update-pr-branch-version]
    runs-on: ubuntu-latest
    env:
      APP_VERSION: ${{ needs.update-pr-branch-version.outputs.new-version }}
    steps:
      - uses: actions/checkout@v3

      - uses: abatilo/actions-poetry@v2.1.4

      - uses: UWIT-IAM/actions/configure-gcloud-docker@0.1
        with:
          gcloud-token: ${{ secrets.GCR_TOKEN }}

      - run: |
          poetry run pip install tox uw-it-build-fingerprinter
          ./scripts/install-build-scripts.sh
        id: configure
        name: Set up environment

      - run: poetry run tox -e build-layers -- -k

      - name: Run validation checks and tests
        run: poetry run tox -e black,flake8,unit-tests
        id: run-validations

      - name: Cache fingerprinted layers
        run: ./scripts/build-layers.sh --cache

      - name: Push tag for pull request
        run: ${STEP_SCRIPTS}/create-pr-tag.sh -s ${{ env.source_image }}
        id: create-pr-tag
        env:
          source_image: gcr.io/uwit-mci-iam/husky-directory.app:tox

      - uses: mshick/add-pr-comment@v1
        env:
          PR_TAG: ${{ steps.create-pr-tag.outputs.image }}
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]'
          allow-repeats: false
          message: |
            Download and run the latest build with:

            ```
            ./scripts/run-development-server.sh -i ${{ env.PR_TAG }}
            ```
