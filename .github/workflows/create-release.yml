on:
  push:
    branches:
      - main
      - dry-run-create-release

env:
  STEP_SCRIPTS: ${{ github.workspace }}/.github/steps/create-release

jobs:
  configure-release:
    runs-on: ubuntu-latest
    outputs:
      release-required: ${{ steps.get-release.outputs.release-required }}
      version: ${{ steps.get-release.outputs.version }}
      latest-release: ${{ steps.get-release.outputs.latest-release }}
    steps:
      - uses: actions/checkout@v2
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.1.0
      - run: ./scripts/install-build-scripts.sh
      - run: ${STEP_SCRIPTS}/is-release-required.sh
        id: get-release
        name: Get version and determine release requirement

  create-release:
    needs: [configure-release]
    if: needs.configure-release.outputs.release-required == 'true'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ needs.configure-release.outputs.version }}
    strategy:
      max-parallel: 1
    steps:
      - uses: actions/checkout@v2

      - run: ./scripts/install-build-scripts.sh
        name: Install UWIT-IAM/common-build-scripts

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.1.0

      - uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          project_id: ${{ secrets.IAM_GCR_REPO }}
          service_account_key: ${{ secrets.GCR_TOKEN }}
          export_default_credentials: true
          credentials_file_path: /tmp/gcloud.json
        name: Bootstrap gcloud

      - run: gcloud auth configure-docker gcr.io

      - run: ./scripts/pre-push.sh --headless
        name: Validate build

      - name: Create release ${{ needs.configure-release.outputs.version }}
        uses: ncipollo/release-action@v1
        with:
          # Use PAT so that the release will trigger the deployment workflow.
          token: ${{ secrets.ACTIONS_PAT }}
          tag: ${{ needs.configure-release.outputs.version }}
        if: github.ref == 'refs/heads/main'

  push-release-image:
    needs: [configure-release, create-release]
    runs-on: ubuntu-latest
    env:
      version: ${{ needs.configure-release.outputs.version }}
    steps:
      - run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]
          then
            echo ::set-output name=release-ref::$version
          else
            echo ::set-output name=release-ref::${GITHUB_REF}
          fi
        name: Set the ref to check out from github
        id: release-ref

      - uses: actions/checkout@v2
        with:
          ref: ${{ steps.release-ref.outputs.release-ref }}

      - run: |
          ${STEP_SCRIPTS}/push-release-image.sh -v ${{ env.version }} --strict
