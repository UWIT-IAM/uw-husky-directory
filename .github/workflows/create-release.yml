on:
  push:
    branches:
      - main
      - dry-run-create-release

env:
  STEP_SCRIPTS: ${{ github.workspace }}/.github/steps/create-release

jobs:
  configure-release:
    runs-on: ubuntu-latest
    outputs:
      release-required: ${{ steps.get-release.outputs.release-required }}
      version: ${{ steps.get-release.outputs.version }}
      latest-release: ${{ steps.get-release.outputs.latest-release }}
    steps:
      - uses: actions/checkout@v2
      - name: Install poetry
        uses: abatilo/actions-poetry@v2.1.0
      - run: ./scripts/install-build-scripts.sh
      - run: ${STEP_SCRIPTS}/is-release-required.sh
        id: get-release
        name: Get version and determine release requirement

  create-release:
    needs: [configure-release]
    if: needs.configure-release.outputs.release-required == 'true'
    runs-on: ubuntu-latest
    env:
      version: ${{ needs.configure-release.outputs.version }}
    concurrency:
      group: ${{ github.repository }}
      cancel-in-progress: false
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2

      - name: Install poetry
        uses: abatilo/actions-poetry@v2.1.0

      - uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCR_TOKEN }}
        name: Authenticate to gcloud

      - uses: google-github-actions/setup-gcloud@v0
        with:
          # This version has to stay pinned in order
          # to work with docker-compose; there is a bug
          # either in Docker's or Google's software.
          # Ref: https://stackoverflow.com/questions/65295958/docker-compose-not-working-with-gcloud-cannot-find-openssl
          version: 297.0.1

      - run: |
          poetry run pip install tox uw-it-build-fingerprinter
          ./scripts/install-build-scripts.sh
          gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
          gcloud auth configure-docker --quiet gcr.io
        name: Install build dependencies and authenticate docker
      - run: |
          poetry run tox -e build-layers \
            -- -k -t ${{ env.version }} --tag-release-image ${{ env.version }}
          poetry run tox -e unit-tests
        # Build layers with the -k option to avoid installing a lot of
        # unnecessary dependencies. We can also skip black/flake8 for
        # this phase, because the code has already been accepted into
        # the repository.
        name: Validate build

      - name: Create release ${{ needs.configure-release.outputs.version }}
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.configure-release.outputs.version }}
        if: github.ref == 'refs/heads/main'

      - run: docker push gcr.io/uwit-mci-iam/husky-directory:${{ env.version }}
        if: github.ref == 'refs/heads/main'

      - run: |
          gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
          ./scripts/deploy.sh -t dev -v ${{ env.version }} \
            ${{ github.ref != 'refs/heads/main' && '-x' || '' }}
